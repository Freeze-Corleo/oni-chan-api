# it will give a name for github action
name: Node.js CI Testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-quality:
      runs-on: ubuntu-latest
      name: check-quality
      steps:
      - name: Check code meets quality standards
        id: code-inspector
        uses: codeinspectorio/github-action@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          code_inspector_api_token: ${{ secrets.CODE_INSPECTOR_API_TOKEN }}
          force_ref: 'none'
          min_quality_grade: 'WARNING'
          min_quality_score: '50'
          max_defects_rate: '1'
          max_complex_functions_rate: '1'
          max_long_functions_rate: '1'
          project_name: ''
          max_timeout_sec: '600'
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [check-quality]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: use node.js setting
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      # it will then install all dependencies
      - name: Install dependencies
        run: npm install
      - name: Install serve package
        run: npm install serve --s
      # it will run alls unit-tests
      - name: Run all tests
        run: npm run test
      - name: Build api service
        run: npm run build
      - name: Copy swagger file in build folder
        run: cp swagger_output_file.json ./build
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY}}
          heroku_app_name: "test-onichan-api"
          heroku_email: delponleo@gmail.com
        env:
          HD_MONGOOSE_URL: mongodb://admin_freezecorleone:Tdedf3883&ChevalierBleu667&sofreezelaw@0.tcp.ngrok.io:15035/?readPreference=primary&appname=MongoDB%20Compass&ssl=false
          HD_HOST_MS: 4.tcp.ngrok.io
          HD_USERNAME_MS: root
          HD_PASSWORD_MS: Leodelponcesi12345&
          HD_DB_MS: db_freezou
          HD_PORT_MS: 19000
          HD_DATABASE_URL: mysql://root:Leodelponcesi12345&@8.tcp.ngrok.io:16009/db_freezou?connection_limit=5
          HD_PRISMA_DATABASE: mysql://root:Leodelponcesi12345&@8.tcp.ngrok.io:16009/db_freezou?connection_limit=5
          HD_SEND_GRID_KEY: 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
          HD_SG_REGISTER_TEMPLATE: d-095286ba916642f9ae5ea4a9b4ae8701
          HD_GOOGLE_CLIENT_ID: 749879349440-49s7sv0vkd0i6cv01659m5vteivtqmqn.apps.googleusercontent.com
          HD_GOOGLE_CLIENT_SECRET: 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
          HD_STRIPE_SK: sk_test_51LFDCCIc1K9pzplS9hqj40DGed8r7LUJFKBPlHYp968384LKdrUFcIKkkMl0AiSdiGqMmaDjE94dATBVZt4uqmYw004NVUZTxX